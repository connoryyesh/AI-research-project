{"ast":null,"code":"var _jsxFileName = \"/Users/varv/Downloads/wf 4/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// contexts/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { getCurrentUser, fetchAuthSession, signOut } from 'aws-amplify/auth';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check for authentication state on mount and when auth changes\n  const checkAuthState = async () => {\n    setIsLoading(true);\n    try {\n      console.log(\"Checking auth state...\");\n      // Get the current authenticated user\n      const currentUser = await getCurrentUser();\n      console.log(\"Current user:\", currentUser);\n\n      // Get user session for more details\n      const session = await fetchAuthSession();\n      console.log(\"Session:\", session);\n\n      // Get user role from the token claims or a default role\n      let userRole = 'survey-taker'; // Default role for new users\n\n      try {\n        var _session$tokens;\n        // Extract role from Cognito tokens if available\n        const idToken = (_session$tokens = session.tokens) === null || _session$tokens === void 0 ? void 0 : _session$tokens.idToken;\n        if (idToken) {\n          const payload = idToken.payload;\n          console.log(\"Token payload:\", payload);\n\n          // Check different locations for role information\n          if (payload['cognito:groups'] && payload['cognito:groups'].length > 0) {\n            userRole = payload['cognito:groups'][0];\n          } else if (payload['custom:role']) {\n            userRole = payload['custom:role'];\n          } else if (payload['role']) {\n            userRole = payload['role'];\n          }\n          console.log(\"Determined user role:\", userRole);\n        }\n      } catch (tokenError) {\n        console.error('Error extracting role from token:', tokenError);\n      }\n\n      // Set the authenticated user with role\n      setUser({\n        ...currentUser,\n        role: userRole\n      });\n      setIsAuthenticated(true);\n      console.log(\"Auth state updated - user is authenticated\");\n    } catch (error) {\n      // User is not authenticated\n      console.log('User not authenticated or error:', error);\n      setUser(null);\n      setIsAuthenticated(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Initialize auth check\n  useEffect(() => {\n    checkAuthState();\n  }, []);\n\n  // Logout function that properly handles Cognito signOut\n  const logOut = async () => {\n    try {\n      await signOut({\n        global: true\n      });\n      setUser(null);\n      setIsAuthenticated(false);\n      return true;\n    } catch (error) {\n      console.error('Error signing out:', error);\n      return false;\n    }\n  };\n\n  // The value that will be supplied to the context\n  const value = {\n    user,\n    isAuthenticated,\n    isLoading,\n    checkAuthState,\n    logOut\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"v1LRzRO747hYRtRdhUIJv9BiM4M=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","getCurrentUser","fetchAuthSession","signOut","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","checkAuthState","console","log","currentUser","session","userRole","_session$tokens","idToken","tokens","payload","length","tokenError","error","role","logOut","global","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/varv/Downloads/wf 4/src/contexts/AuthContext.js"],"sourcesContent":["// contexts/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { \n  getCurrentUser, \n  fetchAuthSession,\n  signOut\n} from 'aws-amplify/auth';\n\n// Create the context\nconst AuthContext = createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check for authentication state on mount and when auth changes\n  const checkAuthState = async () => {\n    setIsLoading(true);\n    try {\n      console.log(\"Checking auth state...\");\n      // Get the current authenticated user\n      const currentUser = await getCurrentUser();\n      console.log(\"Current user:\", currentUser);\n      \n      // Get user session for more details\n      const session = await fetchAuthSession();\n      console.log(\"Session:\", session);\n      \n      // Get user role from the token claims or a default role\n      let userRole = 'survey-taker'; // Default role for new users\n      \n      try {\n        // Extract role from Cognito tokens if available\n        const idToken = session.tokens?.idToken;\n        if (idToken) {\n          const payload = idToken.payload;\n          console.log(\"Token payload:\", payload);\n          \n          // Check different locations for role information\n          if (payload['cognito:groups'] && payload['cognito:groups'].length > 0) {\n            userRole = payload['cognito:groups'][0];\n          } else if (payload['custom:role']) {\n            userRole = payload['custom:role'];\n          } else if (payload['role']) {\n            userRole = payload['role'];\n          }\n          \n          console.log(\"Determined user role:\", userRole);\n        }\n      } catch (tokenError) {\n        console.error('Error extracting role from token:', tokenError);\n      }\n      \n      // Set the authenticated user with role\n      setUser({\n        ...currentUser,\n        role: userRole\n      });\n      setIsAuthenticated(true);\n      console.log(\"Auth state updated - user is authenticated\");\n    } catch (error) {\n      // User is not authenticated\n      console.log('User not authenticated or error:', error);\n      setUser(null);\n      setIsAuthenticated(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Initialize auth check\n  useEffect(() => {\n    checkAuthState();\n  }, []);\n\n  // Logout function that properly handles Cognito signOut\n  const logOut = async () => {\n    try {\n      await signOut({ global: true });\n      setUser(null);\n      setIsAuthenticated(false);\n      return true;\n    } catch (error) {\n      console.error('Error signing out:', error);\n      return false;\n    }\n  };\n\n  // The value that will be supplied to the context\n  const value = {\n    user,\n    isAuthenticated,\n    isLoading,\n    checkAuthState,\n    logOut\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}