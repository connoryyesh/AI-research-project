{"ast":null,"code":"// contexts/AuthContext.js\nimport React,{createContext,useState,useContext,useEffect}from'react';import{getCurrentUser,fetchAuthSession,signOut}from'aws-amplify/auth';// Create the context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();// Custom hook to use the auth context\nexport const useAuth=()=>{return useContext(AuthContext);};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[isLoading,setIsLoading]=useState(true);// Check for authentication state on mount and when auth changes\nconst checkAuthState=async()=>{setIsLoading(true);try{console.log(\"Checking auth state...\");// Get the current authenticated user\nconst currentUser=await getCurrentUser();console.log(\"Current user:\",currentUser);// Get user session for more details\nconst session=await fetchAuthSession();console.log(\"Session:\",session);// Get user role from the token claims or a default role\nlet userRole='survey-taker';// Default role for new users\ntry{var _session$tokens;// Extract role from Cognito tokens if available\nconst idToken=(_session$tokens=session.tokens)===null||_session$tokens===void 0?void 0:_session$tokens.idToken;if(idToken){const payload=idToken.payload;console.log(\"Token payload:\",payload);// Check different locations for role information\nif(payload['cognito:groups']&&payload['cognito:groups'].length>0){userRole=payload['cognito:groups'][0];}else if(payload['custom:role']){userRole=payload['custom:role'];}else if(payload['role']){userRole=payload['role'];}console.log(\"Determined user role:\",userRole);}}catch(tokenError){console.error('Error extracting role from token:',tokenError);}// Set the authenticated user with role\nsetUser({...currentUser,role:userRole});setIsAuthenticated(true);console.log(\"Auth state updated - user is authenticated\");}catch(error){// User is not authenticated\nconsole.log('User not authenticated or error:',error);setUser(null);setIsAuthenticated(false);}finally{setIsLoading(false);}};// Initialize auth check\nuseEffect(()=>{checkAuthState();},[]);// Logout function that properly handles Cognito signOut\nconst logOut=async()=>{try{await signOut({global:true});setUser(null);setIsAuthenticated(false);return true;}catch(error){console.error('Error signing out:',error);return false;}};// The value that will be supplied to the context\nconst value={user,isAuthenticated,isLoading,checkAuthState,logOut};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","getCurrentUser","fetchAuthSession","signOut","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","user","setUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","checkAuthState","console","log","currentUser","session","userRole","_session$tokens","idToken","tokens","payload","length","tokenError","error","role","logOut","global","value","Provider"],"sources":["/Users/varv/Downloads/CONNORR1/src/contexts/AuthContext.js"],"sourcesContent":["// contexts/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { \n  getCurrentUser, \n  fetchAuthSession,\n  signOut\n} from 'aws-amplify/auth';\n\n// Create the context\nconst AuthContext = createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check for authentication state on mount and when auth changes\n  const checkAuthState = async () => {\n    setIsLoading(true);\n    try {\n      console.log(\"Checking auth state...\");\n      // Get the current authenticated user\n      const currentUser = await getCurrentUser();\n      console.log(\"Current user:\", currentUser);\n      \n      // Get user session for more details\n      const session = await fetchAuthSession();\n      console.log(\"Session:\", session);\n      \n      // Get user role from the token claims or a default role\n      let userRole = 'survey-taker'; // Default role for new users\n      \n      try {\n        // Extract role from Cognito tokens if available\n        const idToken = session.tokens?.idToken;\n        if (idToken) {\n          const payload = idToken.payload;\n          console.log(\"Token payload:\", payload);\n          \n          // Check different locations for role information\n          if (payload['cognito:groups'] && payload['cognito:groups'].length > 0) {\n            userRole = payload['cognito:groups'][0];\n          } else if (payload['custom:role']) {\n            userRole = payload['custom:role'];\n          } else if (payload['role']) {\n            userRole = payload['role'];\n          }\n          \n          console.log(\"Determined user role:\", userRole);\n        }\n      } catch (tokenError) {\n        console.error('Error extracting role from token:', tokenError);\n      }\n      \n      // Set the authenticated user with role\n      setUser({\n        ...currentUser,\n        role: userRole\n      });\n      setIsAuthenticated(true);\n      console.log(\"Auth state updated - user is authenticated\");\n    } catch (error) {\n      // User is not authenticated\n      console.log('User not authenticated or error:', error);\n      setUser(null);\n      setIsAuthenticated(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Initialize auth check\n  useEffect(() => {\n    checkAuthState();\n  }, []);\n\n  // Logout function that properly handles Cognito signOut\n  const logOut = async () => {\n    try {\n      await signOut({ global: true });\n      setUser(null);\n      setIsAuthenticated(false);\n      return true;\n    } catch (error) {\n      console.error('Error signing out:', error);\n      return false;\n    }\n  };\n\n  // The value that will be supplied to the context\n  const value = {\n    user,\n    isAuthenticated,\n    isLoading,\n    checkAuthState,\n    logOut\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}