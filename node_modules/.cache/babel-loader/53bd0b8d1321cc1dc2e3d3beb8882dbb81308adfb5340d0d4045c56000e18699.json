{"ast":null,"code":"import React,{useState,useEffect}from'react';import{fetchAuthSession}from'aws-amplify/auth';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UserRoleManagement=()=>{const[users,setUsers]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[successMessage,setSuccessMessage]=useState('');// New user form fields\nconst[newUserName,setNewUserName]=useState('');const[newUserEmail,setNewUserEmail]=useState('');const[newUserRole,setNewUserRole]=useState('survey-taker');// Replace with your actual API endpoint\nconst API_BASE_URL='https://llbkoyb0a2.execute-api.us-east-2.amazonaws.com';useEffect(()=>{fetchUsers();},[]);// Fetch users\nconst fetchUsers=async()=>{try{setLoading(true);setError(null);// Get current admin user's session for the token\nconst session=await fetchAuthSession();const token=session.tokens.idToken.toString();const response=await fetch(`${API_BASE_URL}/users`,{method:'GET',headers:{Authorization:`Bearer ${token}`}});if(!response.ok){throw new Error(`Failed to fetch users: ${response.status}`);}const data=await response.json();setUsers(data.users||[]);}catch(err){console.error('Error fetching users:',err);setError('Failed to load users. Please ensure you have admin privileges.');}finally{setLoading(false);}};// Add a new user\nconst addUser=async e=>{e.preventDefault();if(!newUserEmail){setError('Email is required');return;}try{setLoading(true);setError(null);const session=await fetchAuthSession();const token=session.tokens.idToken.toString();const response=await fetch(`${API_BASE_URL}/users`,{method:'POST',headers:{Authorization:`Bearer ${token}`,'Content-Type':'application/json'},body:JSON.stringify({email:newUserEmail,role:newUserRole})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message||`Failed to add user: ${response.status}`);}// Refresh the user list\nfetchUsers();setSuccessMessage(`User ${newUserEmail} added successfully with role: ${newUserRole}`);setTimeout(()=>setSuccessMessage(''),3000);// Reset form\nsetNewUserName('');setNewUserEmail('');setNewUserRole('survey-taker');}catch(err){console.error('Error adding user:',err);setError(`Failed to add user: ${err.message}`);}finally{setLoading(false);}};// Update a user's role\nconst updateUserRole=async(username,newRole)=>{try{setLoading(true);setError(null);const session=await fetchAuthSession();const token=session.tokens.idToken.toString();// Get the actual Cognito username (UUID) instead of using the email address\nconst userToUpdate=users.find(user=>{var _user$Attributes,_user$Attributes$find;const userEmail=(_user$Attributes=user.Attributes)===null||_user$Attributes===void 0?void 0:(_user$Attributes$find=_user$Attributes.find(attr=>attr.Name==='email'))===null||_user$Attributes$find===void 0?void 0:_user$Attributes$find.Value;return userEmail===username;});if(!userToUpdate){throw new Error(`User with email ${username} not found`);}// Use the actual username (UUID) from Cognito instead of the email\nconst cognitoUsername=userToUpdate.Username;const response=await fetch(`${API_BASE_URL}/users/${encodeURIComponent(cognitoUsername)}/role`,{method:'PUT',headers:{Authorization:`Bearer ${token}`,'Content-Type':'application/json'},body:JSON.stringify({role:newRole})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message||`Failed to update user role: ${response.status}`);}// Refresh the user list\nfetchUsers();setSuccessMessage(`Role updated successfully for ${username}`);setTimeout(()=>setSuccessMessage(''),3000);}catch(err){console.error('Error updating user role:',err);setError(`Failed to update role for ${username}. ${err.message}`);}finally{setLoading(false);}};// Dropdown change handler\nconst handleRoleChange=(username,newRole)=>{if(window.confirm(`Are you sure you want to change this user's role to ${newRole}?`)){updateUserRole(username,newRole);}};// Example roles\nconst availableRoles=['admin','researcher','survey-taker'];return/*#__PURE__*/_jsxs(\"div\",{className:\"user-role-management\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"User Role Management\"}),error&&/*#__PURE__*/_jsxs(\"div\",{style:{color:'red',background:'#ffeeee',padding:'10px',marginBottom:'20px'},children:[error,/*#__PURE__*/_jsx(\"button\",{onClick:()=>setError(null),style:{marginLeft:'10px'},children:\"Dismiss\"})]}),successMessage&&/*#__PURE__*/_jsx(\"div\",{style:{color:'green',background:'#eeffee',padding:'10px',marginBottom:'20px'},children:successMessage}),/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#f9f9f9',padding:'1.5rem',marginBottom:'2rem'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add New User\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:addUser,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newUserName,onChange:e=>setNewUserName(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:newUserEmail,onChange:e=>setNewUserEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Role:\"}),/*#__PURE__*/_jsx(\"select\",{value:newUserRole,onChange:e=>setNewUserRole(e.target.value),children:availableRoles.map(role=>/*#__PURE__*/_jsx(\"option\",{value:role,children:role.charAt(0).toUpperCase()+role.slice(1)},role))})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?'Processing...':'Add User'})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Existing Users\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchUsers,disabled:loading,children:loading?'Loading...':'Refresh List'}),loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading users...\"}),!loading&&users.length===0&&/*#__PURE__*/_jsx(\"p\",{children:\"No users found in the system.\"}),!loading&&users.length>0&&/*#__PURE__*/_jsxs(\"table\",{style:{width:'100%',borderCollapse:'collapse',marginTop:'1rem'},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{style:{backgroundColor:'#f2f2f2'},children:[/*#__PURE__*/_jsx(\"th\",{style:{borderBottom:'1px solid #ddd'},children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{style:{borderBottom:'1px solid #ddd'},children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{style:{borderBottom:'1px solid #ddd'},children:\"Role\"}),/*#__PURE__*/_jsx(\"th\",{style:{borderBottom:'1px solid #ddd'},children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:users.map(user=>{var _user$Attributes2,_user$Attributes2$fin,_user$Attributes3,_user$Attributes3$fin,_user$Attributes4,_user$Attributes4$fin;const userName=((_user$Attributes2=user.Attributes)===null||_user$Attributes2===void 0?void 0:(_user$Attributes2$fin=_user$Attributes2.find(attr=>attr.Name==='name'))===null||_user$Attributes2$fin===void 0?void 0:_user$Attributes2$fin.Value)||'N/A';const userEmail=((_user$Attributes3=user.Attributes)===null||_user$Attributes3===void 0?void 0:(_user$Attributes3$fin=_user$Attributes3.find(attr=>attr.Name==='email'))===null||_user$Attributes3$fin===void 0?void 0:_user$Attributes3$fin.Value)||user.Username||'N/A';const userRole=user.Role||((_user$Attributes4=user.Attributes)===null||_user$Attributes4===void 0?void 0:(_user$Attributes4$fin=_user$Attributes4.find(attr=>attr.Name==='custom:role'))===null||_user$Attributes4$fin===void 0?void 0:_user$Attributes4$fin.Value)||'survey-taker';return/*#__PURE__*/_jsxs(\"tr\",{style:{borderBottom:'1px solid #ddd'},children:[/*#__PURE__*/_jsx(\"td\",{children:userName}),/*#__PURE__*/_jsx(\"td\",{children:userEmail}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"select\",{value:userRole,onChange:e=>handleRoleChange(userEmail,e.target.value),children:availableRoles.map(role=>/*#__PURE__*/_jsx(\"option\",{value:role,children:role.charAt(0).toUpperCase()+role.slice(1)},role))})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>{if(window.confirm(`Apply the current role for ${userName}?`)){updateUserRole(userEmail,userRole);}},children:\"Apply\"})})]},user.Username);})})]})]})]});};export default UserRoleManagement;","map":{"version":3,"names":["React","useState","useEffect","fetchAuthSession","jsx","_jsx","jsxs","_jsxs","UserRoleManagement","users","setUsers","loading","setLoading","error","setError","successMessage","setSuccessMessage","newUserName","setNewUserName","newUserEmail","setNewUserEmail","newUserRole","setNewUserRole","API_BASE_URL","fetchUsers","session","token","tokens","idToken","toString","response","fetch","method","headers","Authorization","ok","Error","status","data","json","err","console","addUser","e","preventDefault","body","JSON","stringify","email","role","errorData","message","setTimeout","updateUserRole","username","newRole","userToUpdate","find","user","_user$Attributes","_user$Attributes$find","userEmail","Attributes","attr","Name","Value","cognitoUsername","Username","encodeURIComponent","handleRoleChange","window","confirm","availableRoles","className","children","style","color","background","padding","marginBottom","onClick","marginLeft","backgroundColor","onSubmit","type","value","onChange","target","required","map","charAt","toUpperCase","slice","disabled","length","width","borderCollapse","marginTop","borderBottom","_user$Attributes2","_user$Attributes2$fin","_user$Attributes3","_user$Attributes3$fin","_user$Attributes4","_user$Attributes4$fin","userName","userRole","Role"],"sources":["/Users/varv/Downloads/CONNORR1/src/pages/UserRoleManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchAuthSession } from 'aws-amplify/auth';\n\nconst UserRoleManagement = () => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  \n  // New user form fields\n  const [newUserName, setNewUserName] = useState('');\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [newUserRole, setNewUserRole] = useState('survey-taker');\n\n  // Replace with your actual API endpoint\n  const API_BASE_URL = 'https://llbkoyb0a2.execute-api.us-east-2.amazonaws.com';\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Fetch users\n  const fetchUsers = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Get current admin user's session for the token\n      const session = await fetchAuthSession();\n      const token = session.tokens.idToken.toString();\n\n      const response = await fetch(`${API_BASE_URL}/users`, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch users: ${response.status}`);\n      }\n      const data = await response.json();\n      setUsers(data.users || []);\n    } catch (err) {\n      console.error('Error fetching users:', err);\n      setError('Failed to load users. Please ensure you have admin privileges.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add a new user\n  const addUser = async (e) => {\n    e.preventDefault();\n    if (!newUserEmail) {\n      setError('Email is required');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      const session = await fetchAuthSession();\n      const token = session.tokens.idToken.toString();\n\n      const response = await fetch(`${API_BASE_URL}/users`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: newUserEmail,\n          role: newUserRole\n        })\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || `Failed to add user: ${response.status}`);\n      }\n\n      // Refresh the user list\n      fetchUsers();\n\n      setSuccessMessage(`User ${newUserEmail} added successfully with role: ${newUserRole}`);\n      setTimeout(() => setSuccessMessage(''), 3000);\n\n      // Reset form\n      setNewUserName('');\n      setNewUserEmail('');\n      setNewUserRole('survey-taker');\n    } catch (err) {\n      console.error('Error adding user:', err);\n      setError(`Failed to add user: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update a user's role\n  const updateUserRole = async (username, newRole) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const session = await fetchAuthSession();\n      const token = session.tokens.idToken.toString();\n\n      // Get the actual Cognito username (UUID) instead of using the email address\n      const userToUpdate = users.find(user => {\n        const userEmail = user.Attributes?.find(attr => attr.Name === 'email')?.Value;\n        return userEmail === username;\n      });\n      \n      if (!userToUpdate) {\n        throw new Error(`User with email ${username} not found`);\n      }\n      \n      // Use the actual username (UUID) from Cognito instead of the email\n      const cognitoUsername = userToUpdate.Username;\n\n      const response = await fetch(`${API_BASE_URL}/users/${encodeURIComponent(cognitoUsername)}/role`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ role: newRole })\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || `Failed to update user role: ${response.status}`);\n      }\n\n      // Refresh the user list\n      fetchUsers();\n\n      setSuccessMessage(`Role updated successfully for ${username}`);\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (err) {\n      console.error('Error updating user role:', err);\n      setError(`Failed to update role for ${username}. ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Dropdown change handler\n  const handleRoleChange = (username, newRole) => {\n    if (window.confirm(`Are you sure you want to change this user's role to ${newRole}?`)) {\n      updateUserRole(username, newRole);\n    }\n  };\n\n  // Example roles\n  const availableRoles = ['admin', 'researcher', 'survey-taker'];\n\n  return (\n    <div className=\"user-role-management\">\n      <h2>User Role Management</h2>\n\n      {error && (\n        <div style={{ color: 'red', background: '#ffeeee', padding: '10px', marginBottom: '20px' }}>\n          {error}\n          <button onClick={() => setError(null)} style={{ marginLeft: '10px' }}>Dismiss</button>\n        </div>\n      )}\n\n      {successMessage && (\n        <div style={{ color: 'green', background: '#eeffee', padding: '10px', marginBottom: '20px' }}>\n          {successMessage}\n        </div>\n      )}\n\n      {/* Add New User Form */}\n      <div style={{ backgroundColor: '#f9f9f9', padding: '1.5rem', marginBottom: '2rem' }}>\n        <h3>Add New User</h3>\n        <form onSubmit={addUser}>\n          <div>\n            <label>Name:</label>\n            <input\n              type=\"text\"\n              value={newUserName}\n              onChange={(e) => setNewUserName(e.target.value)}\n              required\n            />\n          </div>\n\n          <div>\n            <label>Email:</label>\n            <input\n              type=\"email\"\n              value={newUserEmail}\n              onChange={(e) => setNewUserEmail(e.target.value)}\n              required\n            />\n          </div>\n\n          <div>\n            <label>Role:</label>\n            <select\n              value={newUserRole}\n              onChange={(e) => setNewUserRole(e.target.value)}\n            >\n              {availableRoles.map((role) => (\n                <option key={role} value={role}>\n                  {role.charAt(0).toUpperCase() + role.slice(1)}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <button type=\"submit\" disabled={loading}>\n            {loading ? 'Processing...' : 'Add User'}\n          </button>\n        </form>\n      </div>\n\n      {/* Existing Users */}\n      <div>\n        <h3>Existing Users</h3>\n        <button onClick={fetchUsers} disabled={loading}>\n          {loading ? 'Loading...' : 'Refresh List'}\n        </button>\n\n        {loading && <p>Loading users...</p>}\n        {!loading && users.length === 0 && <p>No users found in the system.</p>}\n\n        {!loading && users.length > 0 && (\n          <table style={{ width: '100%', borderCollapse: 'collapse', marginTop: '1rem' }}>\n            <thead>\n              <tr style={{ backgroundColor: '#f2f2f2' }}>\n                <th style={{ borderBottom: '1px solid #ddd' }}>Name</th>\n                <th style={{ borderBottom: '1px solid #ddd' }}>Email</th>\n                <th style={{ borderBottom: '1px solid #ddd' }}>Role</th>\n                <th style={{ borderBottom: '1px solid #ddd' }}>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map((user) => {\n                const userName =\n                  user.Attributes?.find((attr) => attr.Name === 'name')?.Value || 'N/A';\n                const userEmail =\n                  user.Attributes?.find((attr) => attr.Name === 'email')?.Value ||\n                  user.Username ||\n                  'N/A';\n                const userRole =\n                  user.Role ||\n                  user.Attributes?.find((attr) => attr.Name === 'custom:role')?.Value ||\n                  'survey-taker';\n\n                return (\n                  <tr key={user.Username} style={{ borderBottom: '1px solid #ddd' }}>\n                    <td>{userName}</td>\n                    <td>{userEmail}</td>\n                    <td>\n                      <select\n                        value={userRole}\n                        onChange={(e) => handleRoleChange(userEmail, e.target.value)}\n                      >\n                        {availableRoles.map((role) => (\n                          <option key={role} value={role}>\n                            {role.charAt(0).toUpperCase() + role.slice(1)}\n                          </option>\n                        ))}\n                      </select>\n                    </td>\n                    <td>\n                      <button\n                        onClick={() => {\n                          if (\n                            window.confirm(\n                              `Apply the current role for ${userName}?`\n                            )\n                          ) {\n                            updateUserRole(userEmail, userRole);\n                          }\n                        }}\n                      >\n                        Apply\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserRoleManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}