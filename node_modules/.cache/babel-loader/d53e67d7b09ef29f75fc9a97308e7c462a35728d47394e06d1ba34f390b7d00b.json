{"ast":null,"code":"var _jsxFileName = \"/Users/varv/Downloads/wf 4/src/pages/SimulatedAI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TwoPhaseAskDemo = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const [preMessage, setPreMessage] = useState(\"\");\n  const [finalAnswer, setFinalAnswer] = useState(\"\");\n\n  // For star rating\n  const [rating, setRating] = useState(0);\n\n  // Fetch the fixed questions on mount\n  useEffect(() => {\n    fetch(\"https://5ybxfcfpw0.execute-api.us-east-2.amazonaws.com/fixed-questions\").then(res => {\n      if (!res.ok) throw new Error(`GET /fixed-questions failed: ${res.status}`);\n      return res.json();\n    }).then(data => setQuestions(data)).catch(err => console.error(\"Error fetching questions:\", err));\n  }, []);\n\n  // Select a question -> call the “pre” phase immediately, then “final” phase\n  const handleSelectQuestion = async q => {\n    setSelectedQuestion(q);\n    setPreMessage(\"\");\n    setFinalAnswer(\"\");\n    setRating(0);\n\n    // Phase: \"pre\" => immediate pre-answer, no delay\n    try {\n      const res = await fetch(\"https://5ybxfcfpw0.execute-api.us-east-2.amazonaws.com/ask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          questionId: q.id,\n          phase: \"pre\"\n        })\n      });\n      if (!res.ok) throw new Error(`POST /ask (pre) failed: ${res.status}`);\n      const data = await res.json();\n      setPreMessage(data.preAnswerMessage || \"\");\n    } catch (err) {\n      console.error(\"Error fetching pre-answer:\", err);\n      setPreMessage(\"Error retrieving pre-answer.\");\n    }\n\n    // Phase: \"final\" => real 3-5s delay in the Lambda\n    try {\n      const res2 = await fetch(\"https://5ybxfcfpw0.execute-api.us-east-2.amazonaws.com/ask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          questionId: q.id,\n          phase: \"final\"\n        })\n      });\n      if (!res2.ok) throw new Error(`POST /ask (final) failed: ${res2.status}`);\n      const data2 = await res2.json();\n      setFinalAnswer(data2.finalAnswer || \"\");\n    } catch (err) {\n      console.error(\"Error fetching final answer:\", err);\n      setFinalAnswer(\"Error retrieving final answer.\");\n    }\n  };\n\n  // Post rating\n  const handleRate = async () => {\n    if (!selectedQuestion) return;\n    try {\n      const res = await fetch(\"https://5ybxfcfpw0.execute-api.us-east-2.amazonaws.com/rate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          questionId: selectedQuestion.id,\n          rating\n        })\n      });\n      if (!res.ok) throw new Error(`POST /rate failed: ${res.status}`);\n      const data = await res.json();\n      alert(`Rating submitted! ${data.message}`);\n    } catch (err) {\n      console.error(\"Error rating answer:\", err);\n      alert(\"Failed to submit rating.\");\n    }\n  };\n\n  // Simple star rating UI\n  const renderStars = () => {\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setRating(i),\n        style: {\n          cursor: 'pointer',\n          fontSize: '1.5rem',\n          color: i <= rating ? 'gold' : '#ccc',\n          marginRight: '0.2rem'\n        },\n        children: \"\\u2605\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: stars\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 12\n    }, this);\n  };\n  const containerStyle = {\n    display: 'flex',\n    gap: '2rem',\n    padding: '1rem'\n  };\n  const leftStyle = {\n    flex: 1,\n    border: '1px solid #ccc',\n    padding: '1rem'\n  };\n  const rightStyle = {\n    flex: 1,\n    border: '1px solid #ccc',\n    padding: '1rem'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"AI Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: leftStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), questions.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '0.5rem 0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSelectQuestion(q),\n            children: q.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, q.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)), selectedQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Selected: \", selectedQuestion.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), preMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontStyle: 'italic',\n              color: '#666',\n              marginTop: '0.5rem'\n            },\n            children: preMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), finalAnswer && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: 'bold',\n              marginTop: '0.5rem'\n            },\n            children: finalAnswer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: rightStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Rate the Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), !selectedQuestion ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a question on the left first.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: '1rem 0'\n            },\n            children: renderStars()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRate,\n            disabled: !finalAnswer // Only allow rating after finalAnswer arrived\n            ,\n            style: {\n              padding: '0.5rem 1rem'\n            },\n            children: \"Submit Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(TwoPhaseAskDemo, \"dCxBpQl0JNrCFbPtpjRxU1c8d3A=\");\n_c = TwoPhaseAskDemo;\nexport default TwoPhaseAskDemo;\nvar _c;\n$RefreshReg$(_c, \"TwoPhaseAskDemo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TwoPhaseAskDemo","_s","questions","setQuestions","selectedQuestion","setSelectedQuestion","preMessage","setPreMessage","finalAnswer","setFinalAnswer","rating","setRating","fetch","then","res","ok","Error","status","json","data","catch","err","console","error","handleSelectQuestion","q","method","headers","body","JSON","stringify","questionId","id","phase","preAnswerMessage","res2","data2","handleRate","alert","message","renderStars","stars","i","push","onClick","style","cursor","fontSize","color","marginRight","children","fileName","_jsxFileName","lineNumber","columnNumber","containerStyle","display","gap","padding","leftStyle","flex","border","rightStyle","fontFamily","textAlign","map","margin","question","marginTop","fontStyle","fontWeight","disabled","_c","$RefreshReg$"],"sources":["/Users/varv/Downloads/wf 4/src/pages/SimulatedAI.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TwoPhaseAskDemo = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\r\n\r\n  const [preMessage, setPreMessage] = useState(\"\");\r\n  const [finalAnswer, setFinalAnswer] = useState(\"\");\r\n\r\n  // For star rating\r\n  const [rating, setRating] = useState(0);\r\n\r\n  // Fetch the fixed questions on mount\r\n  useEffect(() => {\r\n    fetch(\"https://5ybxfcfpw0.execute-api.us-east-2.amazonaws.com/fixed-questions\")\r\n      .then(res => {\r\n        if (!res.ok) throw new Error(`GET /fixed-questions failed: ${res.status}`);\r\n        return res.json();\r\n      })\r\n      .then(data => setQuestions(data))\r\n      .catch(err => console.error(\"Error fetching questions:\", err));\r\n  }, []);\r\n\r\n  // Select a question -> call the “pre” phase immediately, then “final” phase\r\n  const handleSelectQuestion = async (q) => {\r\n    setSelectedQuestion(q);\r\n    setPreMessage(\"\");\r\n    setFinalAnswer(\"\");\r\n    setRating(0);\r\n\r\n    // Phase: \"pre\" => immediate pre-answer, no delay\r\n    try {\r\n      const res = await fetch(\"https://5ybxfcfpw0.execute-api.us-east-2.amazonaws.com/ask\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ questionId: q.id, phase: \"pre\" })\r\n      });\r\n      if (!res.ok) throw new Error(`POST /ask (pre) failed: ${res.status}`);\r\n      const data = await res.json();\r\n      setPreMessage(data.preAnswerMessage || \"\");\r\n    } catch (err) {\r\n      console.error(\"Error fetching pre-answer:\", err);\r\n      setPreMessage(\"Error retrieving pre-answer.\");\r\n    }\r\n\r\n    // Phase: \"final\" => real 3-5s delay in the Lambda\r\n    try {\r\n      const res2 = await fetch(\"https://5ybxfcfpw0.execute-api.us-east-2.amazonaws.com/ask\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ questionId: q.id, phase: \"final\" })\r\n      });\r\n      if (!res2.ok) throw new Error(`POST /ask (final) failed: ${res2.status}`);\r\n      const data2 = await res2.json();\r\n      setFinalAnswer(data2.finalAnswer || \"\");\r\n    } catch (err) {\r\n      console.error(\"Error fetching final answer:\", err);\r\n      setFinalAnswer(\"Error retrieving final answer.\");\r\n    }\r\n  };\r\n\r\n  // Post rating\r\n  const handleRate = async () => {\r\n    if (!selectedQuestion) return;\r\n    try {\r\n      const res = await fetch(\"https://5ybxfcfpw0.execute-api.us-east-2.amazonaws.com/rate\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ questionId: selectedQuestion.id, rating })\r\n      });\r\n      if (!res.ok) throw new Error(`POST /rate failed: ${res.status}`);\r\n      const data = await res.json();\r\n      alert(`Rating submitted! ${data.message}`);\r\n    } catch (err) {\r\n      console.error(\"Error rating answer:\", err);\r\n      alert(\"Failed to submit rating.\");\r\n    }\r\n  };\r\n\r\n  // Simple star rating UI\r\n  const renderStars = () => {\r\n    const stars = [];\r\n    for (let i = 1; i <= 5; i++) {\r\n      stars.push(\r\n        <span\r\n          key={i}\r\n          onClick={() => setRating(i)}\r\n          style={{\r\n            cursor: 'pointer',\r\n            fontSize: '1.5rem',\r\n            color: i <= rating ? 'gold' : '#ccc',\r\n            marginRight: '0.2rem'\r\n          }}\r\n        >\r\n          ★\r\n        </span>\r\n      );\r\n    }\r\n    return <div>{stars}</div>;\r\n  };\r\n\r\n  const containerStyle = { display: 'flex', gap: '2rem', padding: '1rem' };\r\n  const leftStyle = { flex: 1, border: '1px solid #ccc', padding: '1rem' };\r\n  const rightStyle = { flex: 1, border: '1px solid #ccc', padding: '1rem' };\r\n\r\n  return (\r\n    <div style={{ fontFamily: 'sans-serif' }}>\r\n      {/* NEW Heading at the very top */}\r\n      <h1 style={{ textAlign: 'center' }}>AI Dashboard</h1>\r\n\r\n      <div style={containerStyle}>\r\n        \r\n        {/* LEFT: List of Questions + immediate pre-message & delayed final answer */}\r\n        <div style={leftStyle}>\r\n          <h2>Questions</h2>\r\n          {questions.map(q => (\r\n            <div key={q.id} style={{ margin: '0.5rem 0' }}>\r\n              <button onClick={() => handleSelectQuestion(q)}>\r\n                {q.question}\r\n              </button>\r\n            </div>\r\n          ))}\r\n\r\n          {selectedQuestion && (\r\n            <div style={{ marginTop: '1rem' }}>\r\n              <h3>Selected: {selectedQuestion.question}</h3>\r\n              {preMessage && (\r\n                <p style={{ fontStyle: 'italic', color: '#666', marginTop: '0.5rem' }}>\r\n                  {preMessage}\r\n                </p>\r\n              )}\r\n              {finalAnswer && (\r\n                <p style={{ fontWeight: 'bold', marginTop: '0.5rem' }}>\r\n                  {finalAnswer}\r\n                </p>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* RIGHT: Star Rating & Submit */}\r\n        <div style={rightStyle}>\r\n          <h2>Rate the Answer</h2>\r\n          {!selectedQuestion ? (\r\n            <p>Select a question on the left first.</p>\r\n          ) : (\r\n            <>\r\n              <div style={{ margin: '1rem 0' }}>\r\n                {renderStars()}\r\n              </div>\r\n              <button\r\n                onClick={handleRate}\r\n                disabled={!finalAnswer} // Only allow rating after finalAnswer arrived\r\n                style={{ padding: '0.5rem 1rem' }}\r\n              >\r\n                Submit Rating\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TwoPhaseAskDemo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}