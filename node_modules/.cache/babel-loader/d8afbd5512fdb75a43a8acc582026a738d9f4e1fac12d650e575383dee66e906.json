{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SurveyBuilder=()=>{const[surveyTitle,setSurveyTitle]=useState(\"Untitled Survey\");const[surveyDescription,setSurveyDescription]=useState(\"\");const[questions,setQuestions]=useState([]);const addQuestion=()=>{setQuestions([...questions,{id:Date.now(),text:\"\",type:\"short-answer\",options:[],required:false}]);};const removeQuestion=id=>{setQuestions(questions.filter(q=>q.id!==id));};const handleQuestionChange=(id,text)=>{setQuestions(questions.map(q=>q.id===id?{...q,text}:q));};const handleTypeChange=(id,type)=>{setQuestions(questions.map(q=>{if(q.id===id){return{...q,type,options:type==='multiple-choice'||type==='checkbox'||type==='dropdown'?[\"Option 1\"]:[]};}return q;}));};const handleOptionChange=(questionId,optionIndex,text)=>{setQuestions(questions.map(q=>q.id===questionId?{...q,options:q.options.map((opt,i)=>i===optionIndex?text:opt)}:q));};const addOption=questionId=>{setQuestions(questions.map(q=>q.id===questionId?{...q,options:[...q.options,`Option ${q.options.length+1}`]}:q));};const removeOption=(questionId,optionIndex)=>{setQuestions(questions.map(q=>q.id===questionId?{...q,options:q.options.filter((_,i)=>i!==optionIndex)}:q));};const toggleRequired=id=>{setQuestions(questions.map(q=>q.id===id?{...q,required:!q.required}:q));};// Minimal addition: POST the survey to your API\nconst saveSurvey=async()=>{// The old \"mock\" user feedback\nalert(\"Survey saved! (Mock Functionality)\");console.log({surveyTitle,surveyDescription,questions});// Build the object your backend expects\nconst payload={surveyTitle,surveyDescription,questions};try{// If your final domain is different, replace here\nconst API_URL=\"https://tl2l68tv49.execute-api.us-east-2.amazonaws.com/questions\";const response=await fetch(API_URL,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(payload)});if(!response.ok){throw new Error(`POST /questions failed with status ${response.status}`);}const result=await response.json();console.log(\"Survey saved to backend:\",result);// No further UI changes – or add logic if you want\n}catch(err){console.error(\"Error saving survey to backend:\",err);}};const inputStyle={padding:'0.75rem',margin:'0.75rem 0',width:'100%',boxSizing:'border-box'};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Survey Builder\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Survey Title\",value:surveyTitle,onChange:e=>setSurveyTitle(e.target.value),style:inputStyle}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Survey Description\",value:surveyDescription,onChange:e=>setSurveyDescription(e.target.value),style:{...inputStyle,minHeight:'80px'}}),questions.map((q,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'1rem',padding:'1rem',border:'1px solid #ccc'},children:[/*#__PURE__*/_jsxs(\"span\",{style:{fontWeight:'bold'},children:[\"Q\",index+1,\":\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter question text\",value:q.text,onChange:e=>handleQuestionChange(q.id,e.target.value),style:inputStyle}),/*#__PURE__*/_jsxs(\"select\",{value:q.type,onChange:e=>handleTypeChange(q.id,e.target.value),style:inputStyle,children:[/*#__PURE__*/_jsx(\"option\",{value:\"short-answer\",children:\"Short Answer\"}),/*#__PURE__*/_jsx(\"option\",{value:\"paragraph\",children:\"Paragraph\"}),/*#__PURE__*/_jsx(\"option\",{value:\"multiple-choice\",children:\"Multiple Choice\"}),/*#__PURE__*/_jsx(\"option\",{value:\"checkbox\",children:\"Checkboxes\"}),/*#__PURE__*/_jsx(\"option\",{value:\"dropdown\",children:\"Dropdown\"}),/*#__PURE__*/_jsx(\"option\",{value:\"linear-scale\",children:\"Linear Scale\"})]}),(q.type===\"multiple-choice\"||q.type===\"checkbox\"||q.type===\"dropdown\")&&/*#__PURE__*/_jsxs(\"div\",{style:{margin:'0.75rem 0'},children:[q.options.map((option,i)=>/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'0.5rem',display:'flex',gap:'0.5rem'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:option,onChange:e=>handleOptionChange(q.id,i,e.target.value),style:inputStyle}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeOption(q.id,i),children:\"\\u274C\"})]},i)),/*#__PURE__*/_jsx(\"button\",{onClick:()=>addOption(q.id),children:\"\\u2795 Add Option\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'0.5rem',display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Required:\",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:q.required,onChange:()=>toggleRequired(q.id),style:{marginLeft:'0.5rem'}})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeQuestion(q.id),children:\"\\uD83D\\uDDD1\\uFE0F Remove\"})]})]},q.id)),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'center',gap:'1rem',marginTop:'1rem'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:addQuestion,children:\"\\u2795 Add Question\"}),/*#__PURE__*/_jsx(\"button\",{onClick:saveSurvey,children:\"\\uD83D\\uDCBE Save Survey\"})]})]});};export default SurveyBuilder;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","SurveyBuilder","surveyTitle","setSurveyTitle","surveyDescription","setSurveyDescription","questions","setQuestions","addQuestion","id","Date","now","text","type","options","required","removeQuestion","filter","q","handleQuestionChange","map","handleTypeChange","handleOptionChange","questionId","optionIndex","opt","i","addOption","length","removeOption","_","toggleRequired","saveSurvey","alert","console","log","payload","API_URL","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","result","json","err","error","inputStyle","padding","margin","width","boxSizing","className","children","placeholder","value","onChange","e","target","style","minHeight","index","marginBottom","border","fontWeight","option","display","gap","onClick","marginTop","justifyContent","checked","marginLeft"],"sources":["/Users/varv/Downloads/CONNORR1/src/pages/SurveyBuilder.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SurveyBuilder = () => {\n  const [surveyTitle, setSurveyTitle] = useState(\"Untitled Survey\");\n  const [surveyDescription, setSurveyDescription] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n\n  const addQuestion = () => {\n    setQuestions([...questions, {\n      id: Date.now(),\n      text: \"\",\n      type: \"short-answer\",\n      options: [],\n      required: false\n    }]);\n  };\n\n  const removeQuestion = (id) => {\n    setQuestions(questions.filter(q => q.id !== id));\n  };\n\n  const handleQuestionChange = (id, text) => {\n    setQuestions(questions.map(q => (q.id === id ? { ...q, text } : q)));\n  };\n\n  const handleTypeChange = (id, type) => {\n    setQuestions(questions.map(q => {\n      if (q.id === id) {\n        return {\n          ...q,\n          type,\n          options: (type === 'multiple-choice' || type === 'checkbox' || type === 'dropdown')\n            ? [\"Option 1\"] : []\n        };\n      }\n      return q;\n    }));\n  };\n\n  const handleOptionChange = (questionId, optionIndex, text) => {\n    setQuestions(questions.map(q =>\n      q.id === questionId\n        ? { ...q, options: q.options.map((opt, i) => i === optionIndex ? text : opt) }\n        : q\n    ));\n  };\n\n  const addOption = (questionId) => {\n    setQuestions(questions.map(q =>\n      q.id === questionId\n        ? { ...q, options: [...q.options, `Option ${q.options.length + 1}`] }\n        : q\n    ));\n  };\n\n  const removeOption = (questionId, optionIndex) => {\n    setQuestions(questions.map(q =>\n      q.id === questionId\n        ? { ...q, options: q.options.filter((_, i) => i !== optionIndex) }\n        : q\n    ));\n  };\n\n  const toggleRequired = (id) => {\n    setQuestions(questions.map(q =>\n      q.id === id ? { ...q, required: !q.required } : q\n    ));\n  };\n\n  // Minimal addition: POST the survey to your API\n  const saveSurvey = async () => {\n    // The old \"mock\" user feedback\n    alert(\"Survey saved! (Mock Functionality)\");\n    console.log({ surveyTitle, surveyDescription, questions });\n\n    // Build the object your backend expects\n    const payload = {\n      surveyTitle,\n      surveyDescription,\n      questions\n    };\n\n    try {\n      // If your final domain is different, replace here\n      const API_URL = \"https://tl2l68tv49.execute-api.us-east-2.amazonaws.com/questions\";\n\n      const response = await fetch(API_URL, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload),\n      });\n\n      if (!response.ok) {\n        throw new Error(`POST /questions failed with status ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log(\"Survey saved to backend:\", result);\n      // No further UI changes – or add logic if you want\n    } catch (err) {\n      console.error(\"Error saving survey to backend:\", err);\n    }\n  };\n\n  const inputStyle = {\n    padding: '0.75rem',\n    margin: '0.75rem 0',\n    width: '100%',\n    boxSizing: 'border-box'\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Survey Builder</h2>\n\n      <input\n        type=\"text\"\n        placeholder=\"Survey Title\"\n        value={surveyTitle}\n        onChange={(e) => setSurveyTitle(e.target.value)}\n        style={inputStyle}\n      />\n      <textarea\n        placeholder=\"Survey Description\"\n        value={surveyDescription}\n        onChange={(e) => setSurveyDescription(e.target.value)}\n        style={{ ...inputStyle, minHeight: '80px' }}\n      />\n\n      {questions.map((q, index) => (\n        <div key={q.id} style={{\n          marginBottom: '1rem',\n          padding: '1rem',\n          border: '1px solid #ccc'\n        }}>\n          <span style={{ fontWeight: 'bold' }}>Q{index + 1}:</span>\n          <input\n            type=\"text\"\n            placeholder=\"Enter question text\"\n            value={q.text}\n            onChange={(e) => handleQuestionChange(q.id, e.target.value)}\n            style={inputStyle}\n          />\n          <select\n            value={q.type}\n            onChange={(e) => handleTypeChange(q.id, e.target.value)}\n            style={inputStyle}\n          >\n            <option value=\"short-answer\">Short Answer</option>\n            <option value=\"paragraph\">Paragraph</option>\n            <option value=\"multiple-choice\">Multiple Choice</option>\n            <option value=\"checkbox\">Checkboxes</option>\n            <option value=\"dropdown\">Dropdown</option>\n            <option value=\"linear-scale\">Linear Scale</option>\n          </select>\n\n          {(q.type === \"multiple-choice\" ||\n            q.type === \"checkbox\" ||\n            q.type === \"dropdown\") && (\n            <div style={{ margin: '0.75rem 0' }}>\n              {q.options.map((option, i) => (\n                <div key={i} style={{\n                  marginBottom: '0.5rem',\n                  display: 'flex',\n                  gap: '0.5rem'\n                }}>\n                  <input\n                    type=\"text\"\n                    value={option}\n                    onChange={(e) => handleOptionChange(q.id, i, e.target.value)}\n                    style={inputStyle}\n                  />\n                  <button onClick={() => removeOption(q.id, i)}>❌</button>\n                </div>\n              ))}\n              <button onClick={() => addOption(q.id)}>➕ Add Option</button>\n            </div>\n          )}\n\n          <div style={{ marginTop: '0.5rem', display: 'flex', justifyContent: 'space-between' }}>\n            <label>\n              Required:\n              <input\n                type=\"checkbox\"\n                checked={q.required}\n                onChange={() => toggleRequired(q.id)}\n                style={{ marginLeft: '0.5rem' }}\n              />\n            </label>\n            <button onClick={() => removeQuestion(q.id)}>🗑️ Remove</button>\n          </div>\n        </div>\n      ))}\n\n      <div style={{ display: 'flex', justifyContent: 'center', gap: '1rem', marginTop: '1rem' }}>\n        <button onClick={addQuestion}>➕ Add Question</button>\n        <button onClick={saveSurvey}>💾 Save Survey</button>\n      </div>\n    </div>\n  );\n};\n\nexport default SurveyBuilder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}