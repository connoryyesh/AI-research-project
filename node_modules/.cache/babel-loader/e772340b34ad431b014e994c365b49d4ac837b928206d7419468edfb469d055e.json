{"ast":null,"code":"var _jsxFileName = \"/Users/varv/Downloads/wf 4/src/pages/UserRoleManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchAuthSession } from 'aws-amplify/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserRoleManagement = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // New user form fields\n  const [newUserName, setNewUserName] = useState('');\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [newUserRole, setNewUserRole] = useState('survey-taker');\n\n  // Replace with your actual API endpoint\n  const API_BASE_URL = 'https://llbkoyb0a2.execute-api.us-east-2.amazonaws.com';\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Fetch users\n  const fetchUsers = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Get current admin user's session for the token\n      const session = await fetchAuthSession();\n      const token = session.tokens.idToken.toString();\n      const response = await fetch(`${API_BASE_URL}/users`, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to fetch users: ${response.status}`);\n      }\n      const data = await response.json();\n      setUsers(data.users || []);\n    } catch (err) {\n      console.error('Error fetching users:', err);\n      setError('Failed to load users. Please ensure you have admin privileges.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add a new user\n  const addUser = async e => {\n    e.preventDefault();\n    if (!newUserEmail) {\n      setError('Email is required');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      const session = await fetchAuthSession();\n      const token = session.tokens.idToken.toString();\n      const response = await fetch(`${API_BASE_URL}/users`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: newUserEmail,\n          role: newUserRole\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || `Failed to add user: ${response.status}`);\n      }\n\n      // Refresh the user list\n      fetchUsers();\n      setSuccessMessage(`User ${newUserEmail} added successfully with role: ${newUserRole}`);\n      setTimeout(() => setSuccessMessage(''), 3000);\n\n      // Reset form\n      setNewUserName('');\n      setNewUserEmail('');\n      setNewUserRole('survey-taker');\n    } catch (err) {\n      console.error('Error adding user:', err);\n      setError(`Failed to add user: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update a user's role\n  const updateUserRole = async (username, newRole) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const session = await fetchAuthSession();\n      const token = session.tokens.idToken.toString();\n\n      // Get the actual Cognito username (UUID) instead of using the email address\n      const userToUpdate = users.find(user => {\n        var _user$Attributes, _user$Attributes$find;\n        const userEmail = (_user$Attributes = user.Attributes) === null || _user$Attributes === void 0 ? void 0 : (_user$Attributes$find = _user$Attributes.find(attr => attr.Name === 'email')) === null || _user$Attributes$find === void 0 ? void 0 : _user$Attributes$find.Value;\n        return userEmail === username;\n      });\n      if (!userToUpdate) {\n        throw new Error(`User with email ${username} not found`);\n      }\n\n      // Use the actual username (UUID) from Cognito instead of the email\n      const cognitoUsername = userToUpdate.Username;\n      const response = await fetch(`${API_BASE_URL}/users/${encodeURIComponent(cognitoUsername)}/role`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          role: newRole\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || `Failed to update user role: ${response.status}`);\n      }\n\n      // Refresh the user list\n      fetchUsers();\n      setSuccessMessage(`Role updated successfully for ${username}`);\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (err) {\n      console.error('Error updating user role:', err);\n      setError(`Failed to update role for ${username}. ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Dropdown change handler\n  const handleRoleChange = (username, newRole) => {\n    if (window.confirm(`Are you sure you want to change this user's role to ${newRole}?`)) {\n      updateUserRole(username, newRole);\n    }\n  };\n\n  // Example roles\n  const availableRoles = ['admin', 'researcher', 'survey-taker'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-role-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Role Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        background: '#ffeeee',\n        padding: '10px',\n        marginBottom: '20px'\n      },\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"Dismiss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'green',\n        background: '#eeffee',\n        padding: '10px',\n        marginBottom: '20px'\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f9f9f9',\n        padding: '1.5rem',\n        marginBottom: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUser,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newUserName,\n            onChange: e => setNewUserName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: newUserEmail,\n            onChange: e => setNewUserEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newUserRole,\n            onChange: e => setNewUserRole(e.target.value),\n            children: availableRoles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: role,\n              children: role.charAt(0).toUpperCase() + role.slice(1)\n            }, role, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? 'Processing...' : 'Add User'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchUsers,\n        disabled: loading,\n        children: loading ? 'Loading...' : 'Refresh List'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading users...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this), !loading && users.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No users found in the system.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 44\n      }, this), !loading && users.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse',\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: '#f2f2f2'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                borderBottom: '1px solid #ddd'\n              },\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                borderBottom: '1px solid #ddd'\n              },\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                borderBottom: '1px solid #ddd'\n              },\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                borderBottom: '1px solid #ddd'\n              },\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => {\n            var _user$Attributes2, _user$Attributes2$fin, _user$Attributes3, _user$Attributes3$fin, _user$Attributes4, _user$Attributes4$fin;\n            const userName = ((_user$Attributes2 = user.Attributes) === null || _user$Attributes2 === void 0 ? void 0 : (_user$Attributes2$fin = _user$Attributes2.find(attr => attr.Name === 'name')) === null || _user$Attributes2$fin === void 0 ? void 0 : _user$Attributes2$fin.Value) || 'N/A';\n            const userEmail = ((_user$Attributes3 = user.Attributes) === null || _user$Attributes3 === void 0 ? void 0 : (_user$Attributes3$fin = _user$Attributes3.find(attr => attr.Name === 'email')) === null || _user$Attributes3$fin === void 0 ? void 0 : _user$Attributes3$fin.Value) || user.Username || 'N/A';\n            const userRole = user.Role || ((_user$Attributes4 = user.Attributes) === null || _user$Attributes4 === void 0 ? void 0 : (_user$Attributes4$fin = _user$Attributes4.find(attr => attr.Name === 'custom:role')) === null || _user$Attributes4$fin === void 0 ? void 0 : _user$Attributes4$fin.Value) || 'survey-taker';\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                borderBottom: '1px solid #ddd'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: userEmail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: userRole,\n                  onChange: e => handleRoleChange(userEmail, e.target.value),\n                  children: availableRoles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: role,\n                    children: role.charAt(0).toUpperCase() + role.slice(1)\n                  }, role, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    if (window.confirm(`Apply the current role for ${userName}?`)) {\n                      updateUserRole(userEmail, userRole);\n                    }\n                  },\n                  children: \"Apply\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this)]\n            }, user.Username, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(UserRoleManagement, \"V80jXC0yI2jmB7zOqU1gwdsRfnM=\");\n_c = UserRoleManagement;\nexport default UserRoleManagement;\nvar _c;\n$RefreshReg$(_c, \"UserRoleManagement\");","map":{"version":3,"names":["React","useState","useEffect","fetchAuthSession","jsxDEV","_jsxDEV","UserRoleManagement","_s","users","setUsers","loading","setLoading","error","setError","successMessage","setSuccessMessage","newUserName","setNewUserName","newUserEmail","setNewUserEmail","newUserRole","setNewUserRole","API_BASE_URL","fetchUsers","session","token","tokens","idToken","toString","response","fetch","method","headers","Authorization","ok","Error","status","data","json","err","console","addUser","e","preventDefault","body","JSON","stringify","email","role","errorData","message","setTimeout","updateUserRole","username","newRole","userToUpdate","find","user","_user$Attributes","_user$Attributes$find","userEmail","Attributes","attr","Name","Value","cognitoUsername","Username","encodeURIComponent","handleRoleChange","window","confirm","availableRoles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","background","padding","marginBottom","onClick","marginLeft","backgroundColor","onSubmit","type","value","onChange","target","required","map","charAt","toUpperCase","slice","disabled","length","width","borderCollapse","marginTop","borderBottom","_user$Attributes2","_user$Attributes2$fin","_user$Attributes3","_user$Attributes3$fin","_user$Attributes4","_user$Attributes4$fin","userName","userRole","Role","_c","$RefreshReg$"],"sources":["/Users/varv/Downloads/wf 4/src/pages/UserRoleManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchAuthSession } from 'aws-amplify/auth';\n\nconst UserRoleManagement = () => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  \n  // New user form fields\n  const [newUserName, setNewUserName] = useState('');\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [newUserRole, setNewUserRole] = useState('survey-taker');\n\n  // Replace with your actual API endpoint\n  const API_BASE_URL = 'https://llbkoyb0a2.execute-api.us-east-2.amazonaws.com';\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Fetch users\n  const fetchUsers = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Get current admin user's session for the token\n      const session = await fetchAuthSession();\n      const token = session.tokens.idToken.toString();\n\n      const response = await fetch(`${API_BASE_URL}/users`, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch users: ${response.status}`);\n      }\n      const data = await response.json();\n      setUsers(data.users || []);\n    } catch (err) {\n      console.error('Error fetching users:', err);\n      setError('Failed to load users. Please ensure you have admin privileges.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add a new user\n  const addUser = async (e) => {\n    e.preventDefault();\n    if (!newUserEmail) {\n      setError('Email is required');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      const session = await fetchAuthSession();\n      const token = session.tokens.idToken.toString();\n\n      const response = await fetch(`${API_BASE_URL}/users`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: newUserEmail,\n          role: newUserRole\n        })\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || `Failed to add user: ${response.status}`);\n      }\n\n      // Refresh the user list\n      fetchUsers();\n\n      setSuccessMessage(`User ${newUserEmail} added successfully with role: ${newUserRole}`);\n      setTimeout(() => setSuccessMessage(''), 3000);\n\n      // Reset form\n      setNewUserName('');\n      setNewUserEmail('');\n      setNewUserRole('survey-taker');\n    } catch (err) {\n      console.error('Error adding user:', err);\n      setError(`Failed to add user: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update a user's role\n  const updateUserRole = async (username, newRole) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const session = await fetchAuthSession();\n      const token = session.tokens.idToken.toString();\n\n      // Get the actual Cognito username (UUID) instead of using the email address\n      const userToUpdate = users.find(user => {\n        const userEmail = user.Attributes?.find(attr => attr.Name === 'email')?.Value;\n        return userEmail === username;\n      });\n      \n      if (!userToUpdate) {\n        throw new Error(`User with email ${username} not found`);\n      }\n      \n      // Use the actual username (UUID) from Cognito instead of the email\n      const cognitoUsername = userToUpdate.Username;\n\n      const response = await fetch(`${API_BASE_URL}/users/${encodeURIComponent(cognitoUsername)}/role`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ role: newRole })\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || `Failed to update user role: ${response.status}`);\n      }\n\n      // Refresh the user list\n      fetchUsers();\n\n      setSuccessMessage(`Role updated successfully for ${username}`);\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (err) {\n      console.error('Error updating user role:', err);\n      setError(`Failed to update role for ${username}. ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Dropdown change handler\n  const handleRoleChange = (username, newRole) => {\n    if (window.confirm(`Are you sure you want to change this user's role to ${newRole}?`)) {\n      updateUserRole(username, newRole);\n    }\n  };\n\n  // Example roles\n  const availableRoles = ['admin', 'researcher', 'survey-taker'];\n\n  return (\n    <div className=\"user-role-management\">\n      <h2>User Role Management</h2>\n\n      {error && (\n        <div style={{ color: 'red', background: '#ffeeee', padding: '10px', marginBottom: '20px' }}>\n          {error}\n          <button onClick={() => setError(null)} style={{ marginLeft: '10px' }}>Dismiss</button>\n        </div>\n      )}\n\n      {successMessage && (\n        <div style={{ color: 'green', background: '#eeffee', padding: '10px', marginBottom: '20px' }}>\n          {successMessage}\n        </div>\n      )}\n\n      {/* Add New User Form */}\n      <div style={{ backgroundColor: '#f9f9f9', padding: '1.5rem', marginBottom: '2rem' }}>\n        <h3>Add New User</h3>\n        <form onSubmit={addUser}>\n          <div>\n            <label>Name:</label>\n            <input\n              type=\"text\"\n              value={newUserName}\n              onChange={(e) => setNewUserName(e.target.value)}\n              required\n            />\n          </div>\n\n          <div>\n            <label>Email:</label>\n            <input\n              type=\"email\"\n              value={newUserEmail}\n              onChange={(e) => setNewUserEmail(e.target.value)}\n              required\n            />\n          </div>\n\n          <div>\n            <label>Role:</label>\n            <select\n              value={newUserRole}\n              onChange={(e) => setNewUserRole(e.target.value)}\n            >\n              {availableRoles.map((role) => (\n                <option key={role} value={role}>\n                  {role.charAt(0).toUpperCase() + role.slice(1)}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <button type=\"submit\" disabled={loading}>\n            {loading ? 'Processing...' : 'Add User'}\n          </button>\n        </form>\n      </div>\n\n      {/* Existing Users */}\n      <div>\n        <h3>Existing Users</h3>\n        <button onClick={fetchUsers} disabled={loading}>\n          {loading ? 'Loading...' : 'Refresh List'}\n        </button>\n\n        {loading && <p>Loading users...</p>}\n        {!loading && users.length === 0 && <p>No users found in the system.</p>}\n\n        {!loading && users.length > 0 && (\n          <table style={{ width: '100%', borderCollapse: 'collapse', marginTop: '1rem' }}>\n            <thead>\n              <tr style={{ backgroundColor: '#f2f2f2' }}>\n                <th style={{ borderBottom: '1px solid #ddd' }}>Name</th>\n                <th style={{ borderBottom: '1px solid #ddd' }}>Email</th>\n                <th style={{ borderBottom: '1px solid #ddd' }}>Role</th>\n                <th style={{ borderBottom: '1px solid #ddd' }}>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map((user) => {\n                const userName =\n                  user.Attributes?.find((attr) => attr.Name === 'name')?.Value || 'N/A';\n                const userEmail =\n                  user.Attributes?.find((attr) => attr.Name === 'email')?.Value ||\n                  user.Username ||\n                  'N/A';\n                const userRole =\n                  user.Role ||\n                  user.Attributes?.find((attr) => attr.Name === 'custom:role')?.Value ||\n                  'survey-taker';\n\n                return (\n                  <tr key={user.Username} style={{ borderBottom: '1px solid #ddd' }}>\n                    <td>{userName}</td>\n                    <td>{userEmail}</td>\n                    <td>\n                      <select\n                        value={userRole}\n                        onChange={(e) => handleRoleChange(userEmail, e.target.value)}\n                      >\n                        {availableRoles.map((role) => (\n                          <option key={role} value={role}>\n                            {role.charAt(0).toUpperCase() + role.slice(1)}\n                          </option>\n                        ))}\n                      </select>\n                    </td>\n                    <td>\n                      <button\n                        onClick={() => {\n                          if (\n                            window.confirm(\n                              `Apply the current role for ${userName}?`\n                            )\n                          ) {\n                            updateUserRole(userEmail, userRole);\n                          }\n                        }}\n                      >\n                        Apply\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserRoleManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}